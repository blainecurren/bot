version: "3.8"
services:
  frontend:
    build:
      context: ./frontend
      target: production
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network
    restart: always

  backend:
    build: ./backend
    ports:
      - "3000:3000"
    volumes:
      - ./data:/app/data
    env_file:
      - .env
    environment:
      # WebSocket configuration
      - WS_URL=wss://ws-feed.exchange.coinbase.com

      # Monitor all USD pairs
      - USE_ALL_USD_PAIRS=true

      # Volume monitoring settings
      - VOLUME_THRESHOLD=${VOLUME_THRESHOLD:-1.5}
      - WINDOW_MINUTES=${WINDOW_MINUTES:-5}
      - EMIT_RAW_TRADES=${EMIT_RAW_TRADES:-false}
    networks:
      - app-network
    restart: always

  # Price Spike Detection Bot
  spike-detector:
    build: ./bots/spike-detector
    depends_on:
      - backend
    volumes:
      - ./data:/app/data # Share data directory with backend for SQLite
    env_file:
      - .env
    environment:
      - BACKEND_URL=http://backend:3000
      - PRICE_SPIKE_THRESHOLD=${PRICE_SPIKE_THRESHOLD:-5.0} # 5% spike threshold
      - PRICE_WINDOW_MINUTES=${PRICE_WINDOW_MINUTES:-5} # 5 minute window
      - WEBHOOK_URL=${WEBHOOK_URL:-} # Optional: Slack/Telegram/Discord
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - DB_PATH=/app/data/spike_alerts.db # SQLite database path
    networks:
      - app-network
    restart: always

  # Optional: Keep trading bot if you still need it
  trading-bot:
    build: ./bots/trading
    env_file:
      - .env
    networks:
      - app-network
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  data:
